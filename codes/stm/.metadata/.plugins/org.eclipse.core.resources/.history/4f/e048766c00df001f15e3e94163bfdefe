
#include <stdint.h>
#include "i2c.h"

#define MPU_ADDR		(0x68 << 1)
#define WHO_AM_I			0x75
#define PWR_MGMT_1			0x6B
#define SMPRT_DIV			0x19
#define CONFIG				0x1A
#define GYRO_CONF			0x1B
#define ACCEL_CONF 			0x1C
#define ACCEL_XOUT_H		0x3B

uint8_t err = 0;
uint8_t reg = 0x75;
uint8_t who_am_i = WHO_AM_I;
uint8_t data = 0;
uint8_t kontrol = 0;
uint8_t mpu_data[14]; // accel(6) + temp(2) + gyro(6)
int16_t acc_x;
int16_t acc_y;
int16_t acc_z;
int16_t gyro_x;
int16_t gyro_y;
int16_t gyro_z;
int16_t temp;
float ax;
float ay;
float az;
float gx;
float gy;
float gz;
float t;

void MpuConf();
void Mem_W_R(uint8_t addr, uint8_t *data, uint8_t *kontrol);
void Mpu_Baslat();
float Mpu_Oku();


void Mpu_Baslat(){
	  HAL_I2C_Master_Transmit(&hi2c1, MPU_ADDR, &reg, 1, 100);
	  HAL_I2C_Master_Receive(&hi2c1, MPU_ADDR, &who_am_i, 1, 100);
	  if(who_am_i == 0x68){
		  MpuConf();
	  }
}

float Mpu_Oku(){
	  HAL_I2C_Mem_Read(&hi2c1, MPU_ADDR, ACCEL_XOUT_H, 1, mpu_data, 14, 500);
	  acc_x = ( int16_t )( ( mpu_data[0] << 8 ) | mpu_data[1] );
	  acc_y = ( int16_t )( ( mpu_data[2] << 8 ) | mpu_data[3] );
	  acc_z = ( int16_t )( ( mpu_data[4] << 8 ) | mpu_data[5] );
	  temp = ( int16_t )( ( mpu_data[6] << 8 ) | mpu_data[7] );
	  gyro_x = ( int16_t )( ( mpu_data[8] << 8 ) | mpu_data[9] );
	  gyro_y = ( int16_t )( ( mpu_data[10] << 8 ) | mpu_data[11] );
	  gyro_z = ( int16_t )( ( mpu_data[12] << 8 ) | mpu_data[13] );


	  ax = (float)acc_x / 16384.0;
	  ay = (float)acc_y / 16384.0;
	  az = (float)acc_z / 16384.0;

	  gx = (float)gyro_x / 131.0;
	  gy = (float)gyro_y / 131.0;
	  gz = (float)gyro_z / 131.0;

	  t = temp / 340 + 36.53;
}

void MpuConf(){
	kontrol = 0;
	// sleep modundan çıkma
	data = 0x00;
	Mem_W_R(PWR_MGMT_1, &data, &kontrol);

	/*
	DLPF reg aktif olduğundan Gyroscope Output Rate = 1kHz
	Sample Rate = Gyroscope Output Rate / (1 + SMPLRT_DIV)
	SMPLRT_DIV = 0 ile sample rate = 1kHz ayarlandı */
	data = 0x00;
	Mem_W_R(SMPRT_DIV, &data, &kontrol);

	 //daha hassas ölçüm için DLPF orta değerde ayarlandı
	data = 0x03;
	Mem_W_R(CONFIG, &data, &kontrol);

	// Gyroscope ± 250 °/s ayarlandı
	data = 0x00;
	Mem_W_R(GYRO_CONF, &data, &kontrol);
	// Accelerometer ± 2g ayarlandı
	Mem_W_R(ACCEL_CONF, &data, &kontrol);

}
void Mem_W_R(uint8_t addr, uint8_t *data, uint8_t *kontrol){
	HAL_I2C_Mem_Write(&hi2c1, MPU_ADDR, addr, 1, data, 1, 100);
	HAL_I2C_Mem_Read(&hi2c1, MPU_ADDR, addr, 1, kontrol, 1, 100);
}
