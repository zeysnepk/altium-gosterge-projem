

#include "dht11.h"


void DHT11_Conf(TIM_HandleTypeDef *htim, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin){
	HAL_TIM_Base_Start(htim);
	Pin_Output(GPIOx, GPIO);
	HAL_GPIO_WritePin(GPIOx, GPIO_Pin, GPIO_PIN_RESET);
	HAL_Delay(18);
	Pin_Input(GPIOx, GPIO_Pin);
	int8_t res = 0;
	if ( !(HAL_GPIO_ReadPin(GPIOx, GPIO_Pin)) ){
		delay(80);
	}
}

void Pin_Output(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin){
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	HAL_GPIO_WritePin(GPIOx, GPIO_Pin, GPIO_PIN_RESET);
	GPIO_InitStruct.Pin = GPIO_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
}

void Pin_Input(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin){
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	GPIO_InitStruct.Pin = GPIO_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
}

void Delay_Microseconds(TIM_HandleTypeDef *htim, uint16_t time){
	__HAL_TIM_SET_COUNTER(htim, 0);
	while( __HAL_TIM_GET_COUNTER(htim) < time );
}
